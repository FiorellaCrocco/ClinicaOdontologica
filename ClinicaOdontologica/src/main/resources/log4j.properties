# LOGGER CON OPCION ROOT

# Estamos indicando el nivel mínimo de logging (DEBUG) y creamos dos appenders, stdout y file.
log4j.rootLogger=DEBUG, file, stdout
# Configura en qué nivel se empezaran a mostrar las advertencias tanto por consola como a almacenarse en el fichero.
log4j.logger.infoLogger=DEBUG
# Evitan que los appenders hereden la configuración de sus appenders padres,
log4j.additivity.infoLogger=false


# REDIRIGIR LOS MENSAJE POR CONSOLA

# Indicamos qué tipo de logger será, haciendo referencia a la clase que imprimirá los mensajes (¡Recordá la sección Appenders!)
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
# Indicamos que queremos imprimirlo directamente por la consola.
log4j.appender.stdout.Target=System.out
# Configuran la plantilla que tendrá cada mensaje.
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [ %-5p] [%c{1}:%L] %m%n


# REDIRIGIR LOS MENSAJES A UN FICHERO DE TEXTO SOPORTANDO FILE ROLLING

# Configura la clase como RollingFileAppender, lo que significa que se crearán distintos ficheros al cumplirse determinadas condiciones
log4j.appender.file=org.apache.log4j.RollingFileAppender
# Indicamos el nombre (con ruta incluida) que queremos que tenga nuestro fichero de log.
log4j.appender.file.File=avisos.log
# Con MaxFileSize establecemos el tamaño máximo que tendrá nuestro fichero, y con MaxBackupIndex indicamos cuántos archivos podemos tener usando el mismo log. A partir de llegar al máximo, comenzarán a sobrescribirse empezando por el más antiguo.
log4j.appender.file.MaxFileSize=5MB
# Configuran la plantilla que tendrá cada mensaje.
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [ %-5p] [%c{1}:%L] %m%n
